{"content":"{\"__ud_title\":\"如何使用 Github Actions 自动构建静态页面并部署在 Github Pages 上\",\"__ud_tags\":[],\"__ud_update_time\":1731893808715,\"__ud_create_time\":1731893807834,\"__ud_draft\":false,\"type\":\"doc\",\"content\":[{\"type\":\"heading\",\"attrs\":{\"level\":2},\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"bold\"}],\"text\":\"如何使用 Github Actions 自动构建静态页面并部署在 Github Pages 上\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":3},\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"bold\"}],\"text\":\"本地配置\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"在本地项目中新建文件夹 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\".github/workflows\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"在 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"workflows\"},{\"type\":\"text\",\"text\":\" 文件夹中新建 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"main.yml\"},{\"type\":\"text\",\"text\":\"，用于配置 github actions，内容如下\"}]},{\"type\":\"codeBlock\",\"attrs\":{\"language\":\"yaml\"},\"content\":[{\"type\":\"text\",\"text\":\"name: GitHub Actions Build and Deploy\\non:\\n  push:\\n    branches:\\n      - main\\njobs:\\n  build-and-deploy:\\n    runs-on: ubuntu-latest\\n    steps:\\n      - name: Checkout 🛎️\\n        uses: actions/checkout@v2.3.1\\n        with:\\n          persist-credentials: false\\n\\n      - name: Install and Build 🔧\\n        run: |\\n          npm install\\n          npm run build\\n      - name: Deploy 🚀\\n        uses: JamesIves/github-pages-deploy-action@3.7.1\\n        with:\\n          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}\\n          BRANCH: gh-pages\\n          FOLDER: dist\\n          CLEAN: true\\n\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":3},\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"bold\"}],\"text\":\"Github 配置\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"新建仓库\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"打开\"},{\"type\":\"text\",\"marks\":[{\"type\":\"link\",\"attrs\":{\"href\":\"https://github.com/settings/tokens\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer nofollow\",\"class\":null}}],\"text\":\"Personal access tokens (\"},{\"type\":\"text\",\"marks\":[{\"type\":\"link\",\"attrs\":{\"href\":\"http://github.com\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer nofollow\",\"class\":null}}],\"text\":\"github.com\"},{\"type\":\"text\",\"marks\":[{\"type\":\"link\",\"attrs\":{\"href\":\"https://github.com/settings/tokens\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer nofollow\",\"class\":null}}],\"text\":\")\"},{\"type\":\"text\",\"text\":\"，点击 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"generate new token\"},{\"type\":\"text\",\"text\":\" 按钮，为按钮添加备注（note），例如 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"github-actions-deploy\"},{\"type\":\"text\",\"text\":\"，勾选 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"repos\"},{\"type\":\"text\",\"text\":\" 选项，然后点击完成，跳转后的页面会有一个 key 显示出来，这个 key 只会在这里显示一次，以后就看不到了，复制这个 key 备用。\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"在新建的仓库 Settings 中选择 secrets->actions，点击 new repository secret，Name 填 ACCESS_TOKEN，value 填刚刚复制的 key，然后保存即可。\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":3},\"content\":[{\"type\":\"text\",\"marks\":[{\"type\":\"bold\"}],\"text\":\"部署\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"按照 github 仓库的提示将本地 git 项目上传至 github，点击 actions，会发现有两个 workflow，另一个是 github 自带的 github pages 部署用的 workflow \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"pages-build-deployment\"},{\"type\":\"text\",\"text\":\"，可能会部署失败，需要跳转至仓库 Setting->Pages，将项目 Source 改为 \"},{\"type\":\"text\",\"marks\":[{\"type\":\"code\"}],\"text\":\"gh-pages\"},{\"type\":\"text\",\"text\":\"，文件夹选择 root，回到 actions 页面，会发现 workflow 重新运行，稍等一会就能在 github pages 地址中访问看到部署的静态页面了。\"}]}]}","title":"如何使用 Github Actions 自动构建静态页面并部署在 Github Pages 上","tags":[],"updateTime":1731893808715,"createTime":1731893807834,"draft":false,"intro":"在本地项目中新建文件夹 .github/workflows","html":"<h2 level=\"2\"><strong>如何使用 Github Actions 自动构建静态页面并部署在 Github Pages 上</strong></h2><h3 level=\"3\"><strong>本地配置</strong></h3><p>在本地项目中新建文件夹 <code>.github/workflows</code></p><p>在 <code>workflows</code> 文件夹中新建 <code>main.yml</code>，用于配置 github actions，内容如下</p><div class=\"llt-code readonly\"><div class=\"language\">yaml</div><div class=\"wrapper\"><pre><code class=\"language-yaml\"><span class=\"hljs-attr\" class=\"hljs-attr\">name:</span> <span class=\"hljs-string\" class=\"hljs-string\">GitHub</span> <span class=\"hljs-string\" class=\"hljs-string\">Actions</span> <span class=\"hljs-string\" class=\"hljs-string\">Build</span> <span class=\"hljs-string\" class=\"hljs-string\">and</span> <span class=\"hljs-string\" class=\"hljs-string\">Deploy</span>\n<span class=\"hljs-attr\" class=\"hljs-attr\">on:</span>\n  <span class=\"hljs-attr\" class=\"hljs-attr\">push:</span>\n    <span class=\"hljs-attr\" class=\"hljs-attr\">branches:</span>\n      <span class=\"hljs-bullet\" class=\"hljs-bullet\">-</span> <span class=\"hljs-string\" class=\"hljs-string\">main</span>\n<span class=\"hljs-attr\" class=\"hljs-attr\">jobs:</span>\n  <span class=\"hljs-attr\" class=\"hljs-attr\">build-and-deploy:</span>\n    <span class=\"hljs-attr\" class=\"hljs-attr\">runs-on:</span> <span class=\"hljs-string\" class=\"hljs-string\">ubuntu-latest</span>\n    <span class=\"hljs-attr\" class=\"hljs-attr\">steps:</span>\n      <span class=\"hljs-bullet\" class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\" class=\"hljs-attr\">name:</span> <span class=\"hljs-string\" class=\"hljs-string\">Checkout</span> <span class=\"hljs-string\" class=\"hljs-string\">🛎️</span>\n        <span class=\"hljs-attr\" class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\" class=\"hljs-string\">actions/checkout@v2.3.1</span>\n        <span class=\"hljs-attr\" class=\"hljs-attr\">with:</span>\n          <span class=\"hljs-attr\" class=\"hljs-attr\">persist-credentials:</span> <span class=\"hljs-literal\" class=\"hljs-literal\">false</span>\n\n      <span class=\"hljs-bullet\" class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\" class=\"hljs-attr\">name:</span> <span class=\"hljs-string\" class=\"hljs-string\">Install</span> <span class=\"hljs-string\" class=\"hljs-string\">and</span> <span class=\"hljs-string\" class=\"hljs-string\">Build</span> <span class=\"hljs-string\" class=\"hljs-string\">🔧</span>\n        <span class=\"hljs-attr\" class=\"hljs-attr\">run:</span> <span class=\"hljs-string\" class=\"hljs-string\">|\n          npm install\n          npm run build\n</span>      <span class=\"hljs-bullet\" class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\" class=\"hljs-attr\">name:</span> <span class=\"hljs-string\" class=\"hljs-string\">Deploy</span> <span class=\"hljs-string\" class=\"hljs-string\">🚀</span>\n        <span class=\"hljs-attr\" class=\"hljs-attr\">uses:</span> <span class=\"hljs-string\" class=\"hljs-string\">JamesIves/github-pages-deploy-action@3.7.1</span>\n        <span class=\"hljs-attr\" class=\"hljs-attr\">with:</span>\n          <span class=\"hljs-attr\" class=\"hljs-attr\">ACCESS_TOKEN:</span> <span class=\"hljs-string\" class=\"hljs-string\">${{</span> <span class=\"hljs-string\" class=\"hljs-string\">secrets.ACCESS_TOKEN</span> <span class=\"hljs-string\" class=\"hljs-string\">}}</span>\n          <span class=\"hljs-attr\" class=\"hljs-attr\">BRANCH:</span> <span class=\"hljs-string\" class=\"hljs-string\">gh-pages</span>\n          <span class=\"hljs-attr\" class=\"hljs-attr\">FOLDER:</span> <span class=\"hljs-string\" class=\"hljs-string\">dist</span>\n          <span class=\"hljs-attr\" class=\"hljs-attr\">CLEAN:</span> <span class=\"hljs-literal\" class=\"hljs-literal\">true</span>\n</code></pre></div></div><h3 level=\"3\"><strong>Github 配置</strong></h3><p>新建仓库</p><p>打开<a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://github.com/settings/tokens\">Personal access tokens (</a><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"http://github.com\">github.com</a><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://github.com/settings/tokens\">)</a>，点击 <code>generate new token</code> 按钮，为按钮添加备注（note），例如 <code>github-actions-deploy</code>，勾选 <code>repos</code> 选项，然后点击完成，跳转后的页面会有一个 key 显示出来，这个 key 只会在这里显示一次，以后就看不到了，复制这个 key 备用。</p><p>在新建的仓库 Settings 中选择 secrets-&gt;actions，点击 new repository secret，Name 填 ACCESS_TOKEN，value 填刚刚复制的 key，然后保存即可。</p><h3 level=\"3\"><strong>部署</strong></h3><p>按照 github 仓库的提示将本地 git 项目上传至 github，点击 actions，会发现有两个 workflow，另一个是 github 自带的 github pages 部署用的 workflow <code>pages-build-deployment</code>，可能会部署失败，需要跳转至仓库 Setting-&gt;Pages，将项目 Source 改为 <code>gh-pages</code>，文件夹选择 root，回到 actions 页面，会发现 workflow 重新运行，稍等一会就能在 github pages 地址中访问看到部署的静态页面了。</p><script type=\"module\">const injectHtml = (root, html) => {\n  const iframe = document.createElement(\"iframe\");\n  const htmlContent = `<html><head></head><body>${html}</body></html>`;\n  iframe.style.width = \"100%\";\n  iframe.style.height = \"100%\";\n  iframe.onload = () => {\n    const doc = iframe.contentDocument || iframe.contentWindow?.document;\n    if (!doc) {\n      return;\n    }\n    doc.open();\n    doc.write(htmlContent);\n    doc.close();\n  };\n  root.replaceChildren(iframe);\n}\n  document.querySelectorAll('.playground')?.forEach(el=>{\n    const html = el.getAttribute('data-html');\n    if (html) {\n      injectHtml(el,html);\n    }\n    const indicator = document.createElement(\"div\");\n    indicator.className = \"indicator\";\n    const showCode = document.createElement(\"div\");\n    showCode.className = \"show-code\";\n    showCode.innerText = \"code\";\n    showCode.onclick = () => {\n      el.parentElement.classList.remove(\"preview-only\");\n    };\n    const showPreview = document.createElement(\"div\");\n    showPreview.className = \"show-preview\";\n    showPreview.innerText = \"preview\";\n    showPreview.onclick = () => {\n      el.parentElement.classList.add(\"preview-only\");\n    };\n    indicator.appendChild(showCode);\n    indicator.appendChild(showPreview);\n    el.parentElement.appendChild(indicator);\n    if (window.screen.width < 768) {\n      showPreview.click();\n    }\n  });</script>","id":"Github-Actions-Github-Pages","path":"/posts/Github-Actions-Github-Pages.json"}