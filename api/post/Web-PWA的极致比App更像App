{"content":"{\"__ud_title\":\"Web PWA的极致，比App更像App\",\"__ud_tags\":[],\"__ud_update_time\":1737369135728,\"__ud_create_time\":1736932653064,\"__ud_draft\":true,\"type\":\"doc\",\"content\":[{\"type\":\"heading\",\"attrs\":{\"level\":1,\"id\":null},\"content\":[{\"type\":\"text\",\"text\":\"Web PWA的极致，比App更像App\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"这是一个平平无奇的音乐App Vooh，你可以在里面搜索歌曲，添加播放列表，播放音乐。\"}]},{\"type\":\"image\",\"attrs\":{\"src\":\"/post-assets/m64wq3hg-vooh-show-search.gif\",\"alt\":\"vooh-show-search.gif\",\"title\":null}},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"你可以滑动返回上一级页面，就像任何一个普通的App那样。\"}]},{\"type\":\"image\",\"attrs\":{\"src\":\"/post-assets/m64wq3hj-vooh-swiper.gif\",\"alt\":\"vooh-swiper.gif\",\"title\":null}},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"你可以流畅地展开音乐播放面板，看着歌词随着播放时间滚动。\"}]},{\"type\":\"image\",\"attrs\":{\"src\":\"/post-assets/m64wq3hl-vooh-show-player-2.gif\",\"alt\":\"vooh-show-player-2.gif\",\"title\":null}},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"当然，你也可以在电脑端，或者iPad上使用这个App。\"}]},{\"type\":\"image\",\"attrs\":{\"src\":\"/post-assets/m64wq3hk-vooh-md-show-player.gif\",\"alt\":\"vooh-md-show-player.gif\",\"title\":null}},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"而它与App的唯一不同，在于安装它不需要下载庞大的安装文件，只需要一个链接。音乐播放器Vooh的本体，只是一个网页。\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"作为一个诞生了好几年的老技术，PWA（Progressive Web Application）一直都不温不火，它像是一道可有可无的饭后点心，对于网页来说，即用即走似乎是它与生俱来的诅咒，用户即没有将Web安装到桌面的必要，也没有这个耐心，毕竟对于网络延迟增加1秒都可能导致访问量降低80%的地狱难度模式的网页用户生态而言，让一个浏览器用户点击一个陌生的“Install as application”的按钮简直是天方夜谭，尽管它就在那里，但乐于尝试的人似乎总是寥寥无几。既然PWA和纯网页能做的事情相差无几，那为什么还要浪费桌面空间增加一个以后可能再也不会使用的图标呢？\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"因此，PWA应该朝着更像App的方向努力，才能体现出它的价值。然而，目前的许多PWA，看起来只是把普通的网页做成了全屏，与在浏览器中的体验别无二致，做不出差异化，用户自然没有动力去安装PWA，PWA那些听起来十分美好的特性便成了空中楼阁，无源之水，这个名字也越来越将从人们的视野中慢慢淡去。\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"如何才能让PWA更像APP，这是一个问题。毕竟浏览器的交互逻辑和原生App相比，有着很大的区别，用户早已习惯了移动浏览器中的前进后退，页面加载时的白屏，以及几乎不存在的手势交互，似乎在说，没关系，这就是网页，它做到这个份上已经足够了。然而，若要把这份体验带到模仿原生App的PWA中去，那势必将迎来用户预期低落的反噬，连这样那样的交互体验都没有，还能叫App？\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"为了了解目前的PWA究竟能做到何种地步，我开发了Vooh，一个竭尽可能模仿原生App实现的PWA音乐播放器。它尽力实现了一个原生App应该具备的一切交互细节，包括页面间自然的动画过渡，跟手的手势交互，为触屏优化的样式细节等等。而在这之后，我准备将Vooh的实现原理整理出来，并且准备逐步将之前的做过的项目“App化”，来达到更好的使用体验。\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":2,\"id\":\"App化要点一\"},\"content\":[{\"type\":\"text\",\"text\":\"App化要点一：过渡动画\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"尽管Vue，React以及原生CSS都提供了方便的方式实现过渡动画，但是对于大多数网页来说，一个Loading动画可能就是整个页面里动画最多的地方了。这对于网页来说的确无关紧要，毕竟用户们早已习惯了浏览器里生硬的切换效果，没有成体系的交互反馈，以及突然消失出现的页面区域。尽管在许多成熟组件库慢慢开始注重交互动画的优化之后，这样的情况在慢慢改善，但是依然难以改变用户的刻板印象。因此，为用户的预期提供动画反馈是伪装成原生App的一个关键步骤，否则，缺少反馈的使用体验会一下子将用户安装和使用PWA的欲望拉得很低。\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"除去老生常谈的按钮悬浮、按下时的动画，页面间的过渡动画也是不可缺少的一环。\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"表单组件的动画效果也很重要\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":2,\"id\":\"App化要点一过渡动画\"},\"content\":[{\"type\":\"text\",\"text\":\"App化要点二：手势\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"手势是网页与App的重要差异点，一般来说，很少会有网页支持用户的滑动返回，长按呼出菜单等复杂的手势操作，而这正是让你的PWA丝般顺滑的关键。\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":2,\"id\":\"App化要点二手势\"},\"content\":[{\"type\":\"text\",\"text\":\"App化要点三：离线访问\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"没有哪个用户能接受打开App时整个页面全部消失无法操作，APP的最大优点就是离线可用，好在Service Worker的推出让这一点不再是问题。\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"而Vooh在这之上还做了许多的细节设计，让整个App在模仿原生App时更进一步。\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"1，存储占用管理\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"2，接入系统播放器\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"3，音乐播放兼容性，样式兼容性，路由兼容性\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"4，深色模式\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"5，封面取色\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":1,\"id\":\"未竟之事\"},\"content\":[{\"type\":\"text\",\"text\":\"未竟之事\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"不过，即使是做到了这个地步，PWA的能力始终是有极限的。有些App轻易能做到的事，对于PWA而言犹如天堑一般遥不可及。\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"后台活动\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"跳转到PWA\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"触感反馈\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"系统音量调节\"}]},{\"type\":\"heading\",\"attrs\":{\"level\":1,\"id\":\"总结\"},\"content\":[{\"type\":\"text\",\"text\":\"总结\"}]},{\"type\":\"paragraph\",\"content\":[{\"type\":\"text\",\"text\":\"正如所说，一切能由javascript实现的终将会用javascript实现。如今，越来越多的平台小程序，快应用，乃至于H5套壳的App越来越多，随着浏览器性能的进一步提升，Web能做到的事越来越多，但是Web的交互性却并没有随着javascript的繁荣而被重视起来，受限于javascript的单线程特性，要完全模拟App的使用体验还是有一定的差距，一个劲地往原生体验上靠，有时也并不一定是最好的选择，Vooh的出现只是给了开发者们一个可能的方向，Web的轻量，优秀的可触达性与PWA有机结合，才是Web的发展方向。同时也希望各家浏览器厂商们能加快适配新的Web特性，能够让程序们在写代码时少掉一些头发，便是最大的善事了。\"}]},{\"type\":\"paragraph\"}]}","title":"Web PWA的极致，比App更像App","tags":[],"updateTime":1737369135728,"createTime":1736932653064,"draft":true,"intro":"这是一个平平无奇的音乐App Vooh，你可以在里面搜索歌曲，添加播放列表，播放音乐。","html":"<h1 level=\"1\" id=\"Web-PWA的极致比App更像App\">Web PWA的极致，比App更像App</h1><p>这是一个平平无奇的音乐App Vooh，你可以在里面搜索歌曲，添加播放列表，播放音乐。</p><img src=\"/post-assets/m64wq3hg-vooh-show-search.gif\" alt=\"vooh-show-search.gif\"><p>你可以滑动返回上一级页面，就像任何一个普通的App那样。</p><img src=\"/post-assets/m64wq3hj-vooh-swiper.gif\" alt=\"vooh-swiper.gif\"><p>你可以流畅地展开音乐播放面板，看着歌词随着播放时间滚动。</p><img src=\"/post-assets/m64wq3hl-vooh-show-player-2.gif\" alt=\"vooh-show-player-2.gif\"><p>当然，你也可以在电脑端，或者iPad上使用这个App。</p><img src=\"/post-assets/m64wq3hk-vooh-md-show-player.gif\" alt=\"vooh-md-show-player.gif\"><p>而它与App的唯一不同，在于安装它不需要下载庞大的安装文件，只需要一个链接。音乐播放器Vooh的本体，只是一个网页。</p><p>作为一个诞生了好几年的老技术，PWA（Progressive Web Application）一直都不温不火，它像是一道可有可无的饭后点心，对于网页来说，即用即走似乎是它与生俱来的诅咒，用户即没有将Web安装到桌面的必要，也没有这个耐心，毕竟对于网络延迟增加1秒都可能导致访问量降低80%的地狱难度模式的网页用户生态而言，让一个浏览器用户点击一个陌生的“Install as application”的按钮简直是天方夜谭，尽管它就在那里，但乐于尝试的人似乎总是寥寥无几。既然PWA和纯网页能做的事情相差无几，那为什么还要浪费桌面空间增加一个以后可能再也不会使用的图标呢？</p><p>因此，PWA应该朝着更像App的方向努力，才能体现出它的价值。然而，目前的许多PWA，看起来只是把普通的网页做成了全屏，与在浏览器中的体验别无二致，做不出差异化，用户自然没有动力去安装PWA，PWA那些听起来十分美好的特性便成了空中楼阁，无源之水，这个名字也越来越将从人们的视野中慢慢淡去。</p><p>如何才能让PWA更像APP，这是一个问题。毕竟浏览器的交互逻辑和原生App相比，有着很大的区别，用户早已习惯了移动浏览器中的前进后退，页面加载时的白屏，以及几乎不存在的手势交互，似乎在说，没关系，这就是网页，它做到这个份上已经足够了。然而，若要把这份体验带到模仿原生App的PWA中去，那势必将迎来用户预期低落的反噬，连这样那样的交互体验都没有，还能叫App？</p><p>为了了解目前的PWA究竟能做到何种地步，我开发了Vooh，一个竭尽可能模仿原生App实现的PWA音乐播放器。它尽力实现了一个原生App应该具备的一切交互细节，包括页面间自然的动画过渡，跟手的手势交互，为触屏优化的样式细节等等。而在这之后，我准备将Vooh的实现原理整理出来，并且准备逐步将之前的做过的项目“App化”，来达到更好的使用体验。</p><h2 level=\"2\" id=\"App化要点一过渡动画\">App化要点一：过渡动画</h2><p>尽管Vue，React以及原生CSS都提供了方便的方式实现过渡动画，但是对于大多数网页来说，一个Loading动画可能就是整个页面里动画最多的地方了。这对于网页来说的确无关紧要，毕竟用户们早已习惯了浏览器里生硬的切换效果，没有成体系的交互反馈，以及突然消失出现的页面区域。尽管在许多成熟组件库慢慢开始注重交互动画的优化之后，这样的情况在慢慢改善，但是依然难以改变用户的刻板印象。因此，为用户的预期提供动画反馈是伪装成原生App的一个关键步骤，否则，缺少反馈的使用体验会一下子将用户安装和使用PWA的欲望拉得很低。</p><p>除去老生常谈的按钮悬浮、按下时的动画，页面间的过渡动画也是不可缺少的一环。</p><p>表单组件的动画效果也很重要</p><h2 level=\"2\" id=\"App化要点二手势\">App化要点二：手势</h2><p>手势是网页与App的重要差异点，一般来说，很少会有网页支持用户的滑动返回，长按呼出菜单等复杂的手势操作，而这正是让你的PWA丝般顺滑的关键。</p><h2 level=\"2\" id=\"App化要点三离线访问\">App化要点三：离线访问</h2><p>没有哪个用户能接受打开App时整个页面全部消失无法操作，APP的最大优点就是离线可用，好在Service Worker的推出让这一点不再是问题。</p><p>而Vooh在这之上还做了许多的细节设计，让整个App在模仿原生App时更进一步。</p><p>1，存储占用管理</p><p>2，接入系统播放器</p><p>3，音乐播放兼容性，样式兼容性，路由兼容性</p><p>4，深色模式</p><p>5，封面取色</p><h1 level=\"1\" id=\"未竟之事\">未竟之事</h1><p>不过，即使是做到了这个地步，PWA的能力始终是有极限的。有些App轻易能做到的事，对于PWA而言犹如天堑一般遥不可及。</p><p>后台活动</p><p>跳转到PWA</p><p>触感反馈</p><p>系统音量调节</p><h1 level=\"1\" id=\"总结\">总结</h1><p>正如所说，一切能由javascript实现的终将会用javascript实现。如今，越来越多的平台小程序，快应用，乃至于H5套壳的App越来越多，随着浏览器性能的进一步提升，Web能做到的事越来越多，但是Web的交互性却并没有随着javascript的繁荣而被重视起来，受限于javascript的单线程特性，要完全模拟App的使用体验还是有一定的差距，一个劲地往原生体验上靠，有时也并不一定是最好的选择，Vooh的出现只是给了开发者们一个可能的方向，Web的轻量，优秀的可触达性与PWA有机结合，才是Web的发展方向。同时也希望各家浏览器厂商们能加快适配新的Web特性，能够让程序们在写代码时少掉一些头发，便是最大的善事了。</p><p></p><script type=\"module\">const injectHtml = (root, html) => {\n  const iframe = document.createElement(\"iframe\");\n  const htmlContent = `<html><head></head><body>${html}</body></html>`;\n  iframe.style.width = \"100%\";\n  iframe.style.height = \"100%\";\n  iframe.onload = () => {\n    const doc = iframe.contentDocument || iframe.contentWindow?.document;\n    if (!doc) {\n      return;\n    }\n    doc.open();\n    doc.write(htmlContent);\n    doc.close();\n  };\n  root.replaceChildren(iframe);\n}\n  document.querySelectorAll('.playground')?.forEach(el=>{\n    const html = el.getAttribute('data-html');\n    if (html) {\n      injectHtml(el,html);\n    }\n    const indicator = document.createElement(\"div\");\n    indicator.className = \"indicator\";\n    const showCode = document.createElement(\"div\");\n    showCode.className = \"show-code\";\n    showCode.innerText = \"code\";\n    showCode.onclick = () => {\n      el.parentElement.classList.remove(\"preview-only\");\n    };\n    const showPreview = document.createElement(\"div\");\n    showPreview.className = \"show-preview\";\n    showPreview.innerText = \"preview\";\n    showPreview.onclick = () => {\n      el.parentElement.classList.add(\"preview-only\");\n    };\n    indicator.appendChild(showCode);\n    indicator.appendChild(showPreview);\n    el.parentElement.appendChild(indicator);\n    if (window.screen.width < 768) {\n      showPreview.click();\n    }\n  });</script>","cover":{"src":"/post-assets/m64wq3hg-vooh-show-search.gif","alt":"vooh-show-search.gif","title":null},"id":"Web-PWA的极致比App更像App","path":"/posts/Web-PWA的极致比App更像App.json"}