[{"title":"CSS Tricks","tags":["CSS"],"updateTime":1732703678896,"createTime":1732602476144,"draft":false,"intro":"在现代Web开发中，CSS3的兼容性已经十分之高，有很多以前需要使用JS来实现的功能，对于现代CSS来说已经变得轻而易举，","id":"CSS-Tricks","path":"CSS-Tricks"},{"title":"使用CloudFlare Workers登录Github","tags":[],"updateTime":1732261293853,"createTime":1732261107965,"draft":true,"intro":"","id":"使用CloudFlare-Workers登录Github","path":"使用CloudFlare-Workers登录Github"},{"title":"移动端网页避坑指南","tags":[],"updateTime":1732180374116,"createTime":1732180373201,"draft":false,"intro":"移动端浏览器可能会对手指点击做一些优化，在点击某个元素时，如果该元素没有绑定点击事件，会优先查找附近的可点击元素，然后触发附近元素的点击事件，也因此会导致触摸事件被周围元素的点击事件“吞掉”，解决方法是为该元素绑定一个空的点击事件，防止浏览器默认触发周围元素事件。","id":"移动端网页避坑指南","path":"移动端网页避坑指南"},{"title":"一切皆Hooks","tags":["Vue3"],"updateTime":1732152987459,"createTime":1732152986907,"draft":false,"intro":"Vue3 的composition api是一次巨大的更新，它几乎完全改变了Vue组件的编写模式，响应式体系更加方便与智能，同时与其他第三方库的配合也更加完美，因此我建议在所有的Vue3项目中，都只使用setup模式来编写组件。","id":"一切皆Hooks","path":"一切皆Hooks"},{"title":"JS中的组合与继承","tags":[],"updateTime":1732152902975,"createTime":1732152882056,"draft":false,"intro":"在前端开发中，有什么是继承可以做到而组合做不到的呢？","id":"JS中的组合与继承","path":"JS中的组合与继承"},{"title":"什么是Peek｜点对点快传","tags":["Peek"],"updateTime":1732152836752,"createTime":1732008475528,"draft":false,"intro":"通俗点说，Peek 是一个简易的数据传输工具，它基于WebRTC进行点对点的数据通讯，并在此基础上实现聊天、音视频通话、文件传输等。得益于peerjs项目的杰出贡献，它抹去了大部分的WebRTC底层实现，使得此项目能专注于传输界面和功能的实现，并且通过peerjs的官方STUN服务器实现NAT穿透，使得Peek无需服务器也能正常使用，成为一个纯粹的静态前端SPA项目。","id":"什么是Peek点对点快传","path":"什么是Peek点对点快传"},{"title":"撤销回退历史记录功能的思考","tags":[],"updateTime":1731911497907,"createTime":1731911496155,"draft":false,"intro":"如果要实现一个历史记录功能，支持撤销和重做操作，例如正确地打印下面的代码，要如何实现呢","id":"撤销回退历史记录功能的思考","path":"撤销回退历史记录功能的思考"},{"title":"2022年了，如何写出优雅的vue3组件","tags":["Vue3"],"updateTime":1731918936800,"createTime":1731911415454,"draft":false,"intro":"在我看来，vue3和vue2最大的区别就是响应式的思考方式的改变，在vue2中，响应式是渲染框架的一部分，你没办法单独地创建一个响应式状态然后复用它，只能用mixin把状态像配置文件那样隔离出来，再用在其他组件当中，响应式也只在组件中生效，这使得一套业务逻辑很难在vue中复用。如果你想要构建组件库，在vue2中最好的方式是构建一个大而全的组件，然后提供数量繁多的props给开发者自定义，而不是提供细粒度的单个组件让开发者自己组装，因为组装需要的逻辑一旦涉及到组件状态就会无法抽离，导致许多重复又无意义的封装。","id":"2022年了如何写出优雅的vue3组件","path":"2022年了如何写出优雅的vue3组件"},{"title":"在浏览器中运行Discord Bot","tags":["DiscordBot"],"updateTime":1731918978330,"createTime":1731893954441,"draft":false,"intro":"最近接触到了Discord Bot开发，也大概了解了开发一个Bot的流程，既然整个bot开发都能给予nodejs来完成，那么理论上使用stackblitz这个平台就能胜任，这样只需要一个chromium浏览器就能搞定了，岂不美哉？","id":"Discord-Bot","path":"Discord-Bot"},{"title":"使用自定义的 VitePress 构建自己的博客","tags":["Vitepress"],"updateTime":1731919010789,"createTime":1731893872976,"draft":false,"intro":"VitePress 的原理是利用 Vue 的 SSR 特性，服务端先把包含 Markdown 文本内容的 Vue 组件渲染成多个静态 HTML 文件，再配合内置的简易路由系统生成一个博客站点，这其实与 VuePress 的原理如出一辙，不过 VitePress 舍弃了许多臃肿的功能，只保留最简单的渲染系统，并且重新实现了一个简易的 router，保持了轻量性，同时也因为使用 Vite 提高了开发时的速度，对于拥有大量文档的项目十分友好。","id":"VitePress","path":"VitePress"},{"title":"如何使用 Github Actions 自动构建静态页面并部署在 Github Pages 上","tags":[],"updateTime":1731893808715,"createTime":1731893807834,"draft":false,"intro":"在本地项目中新建文件夹 .github/workflows","id":"Github-Actions-Github-Pages","path":"Github-Actions-Github-Pages"},{"title":"Urodele，我心中最完美的博客系统","tags":["Urodele","Pin"],"updateTime":1732703425326,"createTime":1731662934912,"draft":false,"intro":"每个程序猿最想做却又最不容易做下去的事，莫过于写博客了。","cover":{"src":"/post-assets/m3o684cd-urodele-home.png","alt":"urodele-home.png","title":null},"id":"Urodele","path":"Urodele"},{"title":"Welcome to Urodele","tags":["Urodele","Welcome"],"updateTime":1731585675799,"createTime":1731585531871,"draft":false,"intro":"What is urodele? Let's see","cover":{"src":"/post-assets/1730949764414_image.png","alt":"image.png","title":null},"id":"Welcome-to-Urodele","path":"Welcome-to-Urodele"}]